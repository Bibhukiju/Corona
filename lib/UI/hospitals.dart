import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class Hospitals extends StatefulWidget {
  @override
  _HospitalsState createState() => _HospitalsState();
}

class _HospitalsState extends State<Hospitals> {
  var url = "https://nepalcorona.info/api/v1/hospitals";
  Autogenerated autogenerated;

  @override
  void initState() {
    fetchData();
    super.initState();
  }

  fetchData() async {
    var res = await http.get(url);
    var jsonData = jsonDecode(res.body);
    autogenerated = Autogenerated.fromJson(jsonData);
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Hospitals",
          style: TextStyle(
            color: Colors.black,
          ),
        ),
        backgroundColor: Colors.white,
        elevation: 0,
      ),
      body: autogenerated == null
          ? Center(
              child: CircularProgressIndicator(),
            )
          : SafeArea(
              child: SingleChildScrollView(
                child: Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: autogenerated.data
                        .map((datas) => Card(
                              elevation: 2,
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  Row(
                                    children: <Widget>[
                                      Expanded(
                                        child: Container(
                                          padding: EdgeInsets.all(20),
                                          child: Text(
                                            datas.name,
                                            style: TextStyle(fontSize: 20),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                  Text("State: " + datas.state),
                                  SizedBox(
                                    height: 4,
                                  ),
                                  Text("full: " + (datas.isFull.toString())),
                                  Text("Contact person : " +
                                      datas.contactPerson),
                                  Text("Phone :  " + datas.phone),
                                  Text("GovernmentApproval:" +
                                      datas.governmentApproved.toString())
                                ],
                              ),
                            ))
                        .toList()),
              ),
            ),
    );
  }
}

class Autogenerated {
  List<Data> data;
  int total;
  int limit;
  int start;
  int page;

  Autogenerated({this.data, this.total, this.limit, this.start, this.page});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['data'] != null) {
      data = new List<Data>();
      json['data'].forEach((v) {
        data.add(new Data.fromJson(v));
      });
    }
    total = json['total'];
    limit = json['limit'];
    start = json['start'];
    page = json['page'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.data != null) {
      data['data'] = this.data.map((v) => v.toJson()).toList();
    }
    data['total'] = this.total;
    data['limit'] = this.limit;
    data['start'] = this.start;
    data['page'] = this.page;
    return data;
  }
}

class Data {
  String sId;
  Location location;
  bool isFull;
  bool governmentApproved;
  String name;
  String contactPerson;
  String contactPersonNumber;
  String address;
  String phone;
  String website;
  String email;
  String notes;
  String hospitalId;
  String state;
  String imageUrl;
  String source;
  Capacity capacity;
  String createdAt;
  String updatedAt;
  int iV;

  Data(
      {this.sId,
      this.location,
      this.isFull,
      this.governmentApproved,
      this.name,
      this.contactPerson,
      this.contactPersonNumber,
      this.address,
      this.phone,
      this.website,
      this.email,
      this.notes,
      this.hospitalId,
      this.state,
      this.imageUrl,
      this.source,
      this.capacity,
      this.createdAt,
      this.updatedAt,
      this.iV});

  Data.fromJson(Map<String, dynamic> json) {
    sId = json['_id'];
    location = json['location'] != null
        ? new Location.fromJson(json['location'])
        : null;
    isFull = json['is_full'];
    governmentApproved = json['government_approved'];
    name = json['name'];
    contactPerson = json['contact_person'];
    contactPersonNumber = json['contact_person_number'];
    address = json['address'];
    phone = json['phone'];
    website = json['website'];
    email = json['email'];
    notes = json['notes'];
    hospitalId = json['hospital_id'];
    state = json['state'];
    imageUrl = json['image_url'];
    source = json['source'];
    capacity = json['capacity'] != null
        ? new Capacity.fromJson(json['capacity'])
        : null;
    createdAt = json['created_at'];
    updatedAt = json['updated_at'];
    iV = json['__v'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['_id'] = this.sId;
    if (this.location != null) {
      data['location'] = this.location.toJson();
    }
    data['is_full'] = this.isFull;
    data['government_approved'] = this.governmentApproved;
    data['name'] = this.name;
    data['contact_person'] = this.contactPerson;
    data['contact_person_number'] = this.contactPersonNumber;
    data['address'] = this.address;
    data['phone'] = this.phone;
    data['website'] = this.website;
    data['email'] = this.email;
    data['notes'] = this.notes;
    data['hospital_id'] = this.hospitalId;
    data['state'] = this.state;
    data['image_url'] = this.imageUrl;
    data['source'] = this.source;
    if (this.capacity != null) {
      data['capacity'] = this.capacity.toJson();
    }
    data['created_at'] = this.createdAt;
    data['updated_at'] = this.updatedAt;
    data['__v'] = this.iV;
    return data;
  }
}

class Location {
  String type;
  List<double> coordinates;

  Location({this.type, this.coordinates});

  Location.fromJson(Map<String, dynamic> json) {
    type = json['type'];
    coordinates = json['coordinates'].cast<double>();
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['type'] = this.type;
    data['coordinates'] = this.coordinates;
    return data;
  }
}

class Capacity {
  String beds;
  String ventilators;
  String isolationBeds;
  String occupiedBeds;
  String doctors;
  String nurses;

  Capacity(
      {this.beds,
      this.ventilators,
      this.isolationBeds,
      this.occupiedBeds,
      this.doctors,
      this.nurses});

  Capacity.fromJson(Map<String, dynamic> json) {
    beds = json['beds'];
    ventilators = json['ventilators'];
    isolationBeds = json['isolation_beds'];
    occupiedBeds = json['occupied_beds'];
    doctors = json['doctors'];
    nurses = json['nurses'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['beds'] = this.beds;
    data['ventilators'] = this.ventilators;
    data['isolation_beds'] = this.isolationBeds;
    data['occupied_beds'] = this.occupiedBeds;
    data['doctors'] = this.doctors;
    data['nurses'] = this.nurses;
    return data;
  }
}
